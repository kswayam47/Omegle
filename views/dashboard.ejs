<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .friend-request {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.3);
            display: none;
            z-index: 1000;
        }
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            display: none;
            z-index: 999;
        }
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px;
            border-radius: 5px;
            color: white;
            display: none;
            z-index: 1001;
        }
        .notification.error {
            background-color: #dc3545;
        }
        .notification.success {
            background-color: #198754;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <div class="card">
                    <div class="card-header">
                        <h2>Welcome <%= user.name %></h2>
                    </div>
                    <div class="card-body">
                        <p>Your ID: <strong id="userId"><%= user.uniqueId %></strong> 
                            <button class="btn btn-sm btn-outline-secondary" onclick="copyUserId()">Copy ID</button>
                        </p>
                        <div class="mb-3">
                            <label for="friendId" class="form-label">Enter Friend's ID:</label>
                            <input type="text" class="form-control" id="friendId">
                            <button class="btn btn-primary mt-2" onclick="sendFriendRequest()">Send Friend Request</button>
                        </div>
                        <hr>
                        <h3>Your Friends</h3>
                        <div id="friendsList">
                            <% friends.forEach(friend => { %>
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span><%= friend.name %> (<%= friend.uniqueId %>)</span>
                                    <button class="btn btn-success btn-sm" onclick="startChat('<%= friend.uniqueId %>')">Chat</button>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Friend Request Popup -->
    <div class="overlay" id="overlay"></div>
    <div class="friend-request" id="friendRequest">
        <h4>Friend Request</h4>
        <p id="requestMessage"></p>
        <button class="btn btn-success me-2" onclick="acceptFriendRequest()">Accept</button>
        <button class="btn btn-danger" onclick="rejectFriendRequest()">Reject</button>
    </div>

    <!-- Notification -->
    <div class="notification" id="notification"></div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let pendingRequestId = null;

        // Connect to socket.io with session data
        socket.on('connect', () => {
            console.log('Connected to server');
        });

        socket.on('error', (data) => {
            showNotification(data.message, 'error');
        });

        socket.on('friendRequest', (data) => {
            pendingRequestId = data.from;
            document.getElementById('requestMessage').textContent = `${data.name} wants to be your friend!`;
            document.getElementById('overlay').style.display = 'block';
            document.getElementById('friendRequest').style.display = 'block';
        });

        socket.on('friendRequestAccepted', (data) => {
            showNotification(`${data.name} accepted your friend request!`, 'success');
            setTimeout(() => location.reload(), 2000);
        });

        socket.on('friendRequestRejected', (data) => {
            showNotification(`${data.name} rejected your friend request.`, 'error');
        });

        function sendFriendRequest() {
            const friendId = document.getElementById('friendId').value.trim();
            if (!friendId) {
                showNotification('Please enter a friend ID', 'error');
                return;
            }
            if (friendId === '<%= user.uniqueId %>') {
                showNotification('You cannot send a friend request to yourself', 'error');
                return;
            }
            socket.emit('sendFriendRequest', { to: friendId });
            showNotification('Friend request sent!', 'success');
        }

        function acceptFriendRequest() {
            socket.emit('acceptFriendRequest', { from: pendingRequestId });
            closeRequestPopup();
            showNotification('Friend request accepted!', 'success');
            setTimeout(() => location.reload(), 2000);
        }

        function rejectFriendRequest() {
            socket.emit('rejectFriendRequest', { from: pendingRequestId });
            closeRequestPopup();
            showNotification('Friend request rejected', 'error');
        }

        function closeRequestPopup() {
            document.getElementById('overlay').style.display = 'none';
            document.getElementById('friendRequest').style.display = 'none';
            pendingRequestId = null;
        }

        function startChat(friendId) {
            window.location.href = `/chat?friend=${friendId}`;
        }

        function copyUserId() {
            const userId = document.getElementById('userId').textContent;
            navigator.clipboard.writeText(userId)
                .then(() => showNotification('ID copied to clipboard!', 'success'))
                .catch(() => showNotification('Failed to copy ID', 'error'));
        }

        function showNotification(message, type) {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.style.display = 'block';
            
            setTimeout(() => {
                notification.style.display = 'none';
            }, 3000);
        }
    </script>
</body>
</html>
